<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.adlifehub.adlife.mapper.CommentMapper">
    <resultMap id="CommentMap" type="com.adlifehub.adlife.model.Comment">
        <id column="id" property="id"/>
        <result column="target_type" property="targetType"/>
        <result column="target_id" property="targetId"/>
        <result column="author_id" property="authorId"/>
        <result column="content" property="content"/>
        <result column="created_at" property="createdAt"/>
        <result column="edited_at" property="editedAt"/>
        <result column="deleted_at" property="deletedAt"/>
    </resultMap>
    <select id="listByTarget" resultMap="CommentMap">select *
                                                     from comments
                                                     where target_type = #{targetType}
                                                       and target_id = #{targetId}
                                                       and deleted_at is null
                                                     order by created_at desc limit #{limit}
                                                     offset #{offset}</select>
    <select id="countByTarget" resultType="int">select count(*)
                                                from comments
                                                where target_type = #{targetType}
                                                  and target_id = #{targetId}
                                                  and deleted_at is null</select>
    <insert id="insert" parameterType="com.adlifehub.adlife.model.Comment" useGeneratedKeys="true"
            keyProperty="id">
        insert into comments(target_type, target_id, author_id, content, created_at)
        values (#{targetType}, #{targetId}, #{authorId}, #{content}, #{createdAt})
    </insert>
    <update id="update" parameterType="com.adlifehub.adlife.model.Comment">update comments
                                                                           set content=#{content},
                                                                               edited_at=#{editedAt}
                                                                           where id = #{id}</update>
    <update id="softDelete" parameterType="long">update comments
                                                 set deleted_at=now()
                                                 where id = #{id}</update>
</mapper>
