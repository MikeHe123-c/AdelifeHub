<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.adlifehub.adlife.mapper.FavoriteMapper">

  <!-- 映射到 FavoriteItemDto；注意 <id> 必须在 <result> 之前 -->
  <resultMap id="FavoriteItemMap" type="com.adlifehub.adlife.dto.FavoriteItemDto">
    <id     column="id"             property="id"/>
    <result column="kind"           property="kind"/>
    <result column="listing_type"   property="listingType"/>
    <result column="fav_created_at" property="favCreatedAt"/>
    <result column="title"          property="title"/>
    <result column="price"          property="price"/>
    <result column="price_unit"     property="priceUnit"/>
    <result column="location"       property="location"/>
    <result column="image"          property="image"/>
    <result column="likes"          property="likes"/>
    <result column="excerpt"        property="excerpt"/>
  </resultMap>

  <!-- ================== 单表增删（与接口方法名一致） ================== -->
  <insert id="insertListingFav">
    INSERT IGNORE INTO listing_favorites(user_id, listing_id, created_at)
    VALUES(#{userId}, #{listingId}, #{createdAt})
  </insert>

  <delete id="deleteListingFav">
    DELETE FROM listing_favorites
    WHERE user_id = #{userId} AND listing_id = #{listingId}
  </delete>

  <insert id="insertPostFav">
    INSERT IGNORE INTO post_favorites(user_id, post_id, created_at)
    VALUES(#{userId}, #{postId}, #{createdAt})
  </insert>

  <delete id="deletePostFav">
    DELETE FROM post_favorites
    WHERE user_id = #{userId} AND post_id = #{postId}
  </delete>

  <delete id="deleteFavoritesByListing">
    DELETE FROM listing_favorites WHERE listing_id = #{listingId}
  </delete>

  <delete id="deleteFavoritesByPost">
    DELETE FROM post_favorites WHERE post_id = #{postId}
  </delete>

  <!-- ============ 通用 insertIgnore / delete（按 targetType 分支） ============ -->
  <insert id="insertIgnore">
    <choose>
      <when test="targetType == 'listing'">
        INSERT IGNORE INTO listing_favorites(user_id, listing_id, created_at)
        VALUES(#{userId}, #{targetId}, NOW())
      </when>
      <when test="targetType == 'post'">
        INSERT IGNORE INTO post_favorites(user_id, post_id, created_at)
        VALUES(#{userId}, #{targetId}, NOW())
      </when>
      <otherwise>
        SELECT 0
      </otherwise>
    </choose>
  </insert>

  <delete id="delete">
    <choose>
      <when test="targetType == 'listing'">
        DELETE FROM listing_favorites WHERE user_id = #{userId} AND listing_id = #{targetId}
      </when>
      <when test="targetType == 'post'">
        DELETE FROM post_favorites   WHERE user_id = #{userId} AND post_id   = #{targetId}
      </when>
      <otherwise>
        SELECT 0
      </otherwise>
    </choose>
  </delete>

  <!-- ================== 我的收藏列表 ==================
       @Param: userId, targetType('listing'|'post'|null), listingType('rental'|'job'|null),
               offset, limit
  -->
  <select id="listFavorites" resultMap="FavoriteItemMap">
    <choose>
      <!-- 只查帖子收藏 -->
      <when test="targetType == 'post'">
        SELECT
        'post' AS kind,
        NULL   AS listing_type,
        pf.created_at AS fav_created_at,
        p.id, p.title,
        NULL AS price, NULL AS price_unit, NULL AS location,
        JSON_UNQUOTE(JSON_EXTRACT(p.images_json, '$[0]')) AS image,
        p.likes AS likes,
        SUBSTRING(p.content,1,120) AS excerpt
        FROM post_favorites pf
        JOIN posts p ON p.id = pf.post_id
        WHERE pf.user_id = #{userId}
        AND p.status = 'active'
        ORDER BY fav_created_at DESC
        LIMIT #{limit} OFFSET #{offset}
      </when>

      <!-- 只查 listing 收藏（可按 rental/job 过滤） -->
      <when test="targetType == 'listing'">
        SELECT
        'listing' AS kind,
        l.type    AS listing_type,
        lf.created_at AS fav_created_at,
        l.id, l.title, l.price, l.price_unit, l.location,
        JSON_UNQUOTE(JSON_EXTRACT(l.images_json, '$[0]')) AS image,
        NULL AS likes,
        NULL AS excerpt
        FROM listing_favorites lf
        JOIN listings l ON l.id = lf.listing_id
        WHERE lf.user_id = #{userId}
        AND l.status IN ('active','closed')
        <if test="listingType != null and listingType != ''">
          AND l.type = #{listingType}
        </if>
        ORDER BY fav_created_at DESC
        LIMIT #{limit} OFFSET #{offset}
      </when>

      <!-- 全部（UNION 后外层可按 listingType 进一步过滤） -->
      <otherwise>
        SELECT * FROM (
        SELECT
        'listing' AS kind,
        l.type    AS listing_type,
        lf.created_at AS fav_created_at,
        l.id, l.title, l.price, l.price_unit, l.location,
        JSON_UNQUOTE(JSON_EXTRACT(l.images_json, '$[0]')) AS image,
        NULL AS likes,
        NULL AS excerpt
        FROM listing_favorites lf
        JOIN listings l ON l.id = lf.listing_id
        WHERE lf.user_id = #{userId}
        AND l.status IN ('active','closed')

        UNION ALL

        SELECT
        'post' AS kind,
        NULL   AS listing_type,
        pf.created_at AS fav_created_at,
        p.id, p.title,
        NULL AS price, NULL AS price_unit, NULL AS location,
        JSON_UNQUOTE(JSON_EXTRACT(p.images_json, '$[0]')) AS image,
        p.likes AS likes,
        SUBSTRING(p.content,1,120) AS excerpt
        FROM post_favorites pf
        JOIN posts p ON p.id = pf.post_id
        WHERE pf.user_id = #{userId}
        AND p.status = 'active'
        ) t
        <where>
          <if test="listingType != null and listingType != ''">
            AND (t.kind = 'listing' AND t.listing_type = #{listingType})
          </if>
        </where>
        ORDER BY t.fav_created_at DESC
        LIMIT #{limit} OFFSET #{offset}
      </otherwise>
    </choose>
  </select>

  <!-- 计数与上面一一对应 -->
  <select id="countFavorites" resultType="int">
    <choose>
      <when test="targetType == 'post'">
        SELECT COUNT(*)
        FROM post_favorites pf
        JOIN posts p ON p.id = pf.post_id
        WHERE pf.user_id = #{userId}
        AND p.status = 'active'
      </when>

      <when test="targetType == 'listing'">
        SELECT COUNT(*)
        FROM listing_favorites lf
        JOIN listings l ON l.id = lf.listing_id
        WHERE lf.user_id = #{userId}
        AND l.status IN ('active','closed')
        <if test="listingType != null and listingType != ''">
          AND l.type = #{listingType}
        </if>
      </when>

      <otherwise>
        SELECT COUNT(*) FROM (
        SELECT 1
        FROM listing_favorites lf
        JOIN listings l ON l.id = lf.listing_id
        WHERE lf.user_id = #{userId}
        AND l.status IN ('active','closed')
        <if test="listingType != null and listingType != ''">
          AND l.type = #{listingType}
        </if>
        UNION ALL
        SELECT 1
        FROM post_favorites pf
        JOIN posts p ON p.id = pf.post_id
        WHERE pf.user_id = #{userId}
        AND p.status = 'active'
        ) x
      </otherwise>
    </choose>
  </select>

</mapper>
